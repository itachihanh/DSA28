O(nlogn)

#include <bits/stdc++.h>
using namespace std;

int main() {
    int n;
    cin >> n;
    int a[n];
    for(int &i : a) cin >> i;
    vector <int> res;
    res.push_back(a[0]);
    for(int i = 1; i < n; i++) {
        auto it = lower_bound(res.begin(), res.end(), a[i]);
        if(it == res.end()) {
            res.push_back(a[i]);
        }
        else {
            *it = a[i];
        }
    }
    cout << res.size();
}

O(n^2)

#include<bits/stdc++.h>

using namespace std;

int main() {
    int n;
    cin >> n;
    int a[n];
    for(int i = 0; i < n; i++) {
        cin >> a[i];
    }
    vector <int> l(n, 1);
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < i; j++) {
            if(a[j] < a[i]) {
                l[i] = max(l[i], l[j] + 1);
            }
        }
    }
    cout << *max_element(l.begin(), l.end());
}
