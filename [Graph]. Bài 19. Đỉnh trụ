#include <bits/stdc++.h>
using namespace std;
#define ll long long
int used[1005] , disc[1005] , low[1005] , timer = 0 , n , m;
bool vertex [ 1005];
set<int> adj[1005];
void inp(){
    cin>>n>>m;
    while(m--){
        int x,y;cin>>x>>y;
        adj[x].insert(y);
        adj[y].insert(x);
    }
    memset( used, 0 ,sizeof(used));
}
void dfs( int u  , int par){
    used[u] = 1;
    disc[u] = low[u] = ++timer;
    int child = 0;
    for(auto v : adj[u]){
        if(v == par)continue;
        if( !used[v]){
            child ++;
            dfs(v,u);
            low[u] = min(low[u], low[v]);
            if(low[v] >= disc[u] && par != -1)vertex[u]= true;
        }
        low[u]=  min( low[u] ,  disc[v]);
     }
    if(par == -1 && child >=2)vertex[u] = true;
}
int main(){
    inp();
    for(int i = 1 ; i<= n ; i++){
        if(!used[i]){
            dfs(i , -1);
        }
    }
    int ans=0;
    for(auto x : vertex){
        if(x== true)ans++;
    }
    cout<<ans;
}
