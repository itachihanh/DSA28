#include<bits/stdc++.h>
using namespace std;

int n, m, k;
bool visited[1005];
vector<int> ke[1005];
vector<int> tplt[1005];

void DFS(int s) {
    tplt[k].push_back(s);
    visited[s] = true;
    for(int i : ke[s]) {
        if(!visited[i]) {
            DFS(i);
        }
    }
}

int main() {
    cin >> n >> m;
    for(int i = 1; i <= m; i++) {
        int x, y;
        cin >> x >> y;
        ke[x].push_back(y);
        ke[y].push_back(x);
    }
    k = 1;
    for(int i = 1; i <= n; i++) {
        if(!visited[i]) {
            DFS(i);
            k++;
        }
    }
    for(int i = 1; i < k; i++) {
        sort(tplt[i].begin(), tplt[i].end());
    }
    vector<int> v;
    for(int i = 1; i < k; i++) {
        int tmp = 0;
        for(int j : tplt[i]) {
            if(ke[j].size() > ke[tmp].size() || ke[j].size() == 0) {
                tmp = j;
            } 
        }
        v.push_back(tmp);
    }
    sort(v.begin(), v.end());
    for(int i : v) cout << i << " ";
}
