#include<bits/stdc++.h>
using namespace std;
#define ll long long

int n, m;
vector<int> adj[1005];
bool visited[1005];
int parent[1005];

void nhap() {
    cin >> n >> m;
    for(int i = 1; i <= m; i++) {
        int a, b; cin >> a >> b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    for(int i = 1; i <= n; i++) {
        parent[i] = i;
    }
}

bool BFS(int s) {
    queue<int> q;
    q.push(s);
    visited[s] = true;
    while(!q.empty()) {
        int u = q.front(); q.pop();
        for(int i : adj[u]) {
            if(!visited[i]) {
                parent[i] = u;
                visited[i] = true;
                q.push(i);
            }
            else if(parent[u] != i) return true;
        }
    }
    return false;
}

int main() {
    nhap();
    for(int i = 1; i <= n; i++) {
        if(!visited[i]) {
            if(BFS(i)) {
                cout << "NO";
                return 0;
            }
        }
    }
    cout << "YES";
}
